// "use client"
// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import Footer from "./components/footer/page";
// import Navbar from "./components/navbar/page";
// import HeroImage from "./components/hero-image/page";
// import { usePathname, useRouter } from "next/navigation";



// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {

//   const pathname = usePathname(); // Get current path
//   const router = useRouter(); // Using useRouter for navigation-related functionality

//   // Conditionally hide the HeroImage on the booking form page
//   const isBookingPage = pathname === '/components/book';
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       ><Navbar/>
//        {!isBookingPage && <HeroImage />}
//         {children}
       
//       <Footer/>
//       </body>
//     </html>
//   );
// }



"use client"; // This marks the component as a client-side component

import localFont from "next/font/local";
import "./globals.css";
import Footer from "./components/footer/page";
import Navbar from "./components/navbar/page";
import HeroImage from "./components/hero-image/page";
import { usePathname } from "next/navigation";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname(); // Get current path

  // Conditionally hide the HeroImage on the booking form page
  const isBookingPage = pathname === "/components/book";

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Navbar />
        {children}
        {!isBookingPage && <HeroImage />}
        <Footer />
      </body>
    </html>
  );
}
